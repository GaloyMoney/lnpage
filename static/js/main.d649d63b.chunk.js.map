{"version":3,"sources":["components/header.js","components/home.js","components/downloadApp.js","components/receive.js","components/printQR.js","App.js","index.js"],"names":["Header","Navbar","bg","Container","Brand","href","Image","src","rounded","GET_NODE_STATS","gql","Home","nodeUrl","window","env","GRAPHQL_URI","indexOf","useQuery","loading","error","data","Row","Col","Jumbotron","Card","Body","ListGroup","variant","Item","style","fontSize","overflowWrap","nodeStats","id","peersCount","channelsCount","getOS","userAgent","navigator","vendor","opera","test","MSStream","playStoreLink","appStoreLink","apkLink","DownloadApp","os","location","replace","width","Button","block","value","size","UPDATE_PENDING_INVOICE","GENERATE_PUBLIC_INVOICE","Receive","username","useState","invoice","setInvoice","invoicePaid","setInvoicePaid","setOS","showCopied","setShowCopied","useMutation","onCompleted","addInvoice","publicInvoice","onError","console","message","generatePublicInvoice","invoiceLoading","useEffect","variables","updatePendingInvoice","invoiceUpdating","checkPayment","a","decoded","lightningPayReq","decode","tags","filter","item","tagName","hash","fluid","undefined","className","md","padding","options","animationData","loop","height","paddingBottom","paddingTop","OverlayTrigger","show","placement","overlay","Tooltip","onClick","copy","setTimeout","logoImage","logoWidth","disabled","Footer","Link","origin","QRContainer","React","forwardRef","props","ref","display","Text","ecLevel","PrintQR","componentRef","useRef","trigger","content","current","onBeforeGetContent","document","getElementById","routes","App","useRoutes","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render"],"mappings":"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","file":"static/js/main.d649d63b.chunk.js","sourcesContent":["import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport Image from 'react-bootstrap/Image'\n\nfunction Header() {\n\treturn (\n\t\t<Navbar bg=\"dark\">\n\t\t<Container>\n\t\t\t<Navbar.Brand href=\"https://bitcoinbeach.com\"><Image src={process.env.PUBLIC_URL + '/BBLogo.png'} rounded/> </Navbar.Brand>\n\t\t</Container>\n\t\t</Navbar>\n\t)\n}\n\nexport default Header","import React from 'react';\nimport Header from './header.js'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport { gql, useQuery } from '@apollo/client';\n\nconst GET_NODE_STATS = gql`\n      query nodeStats {\n        nodeStats {\n          peersCount,\n          channelsCount,\n          id\n        }\n      }\n    `\n\n\nfunction Home() {\n\n  let nodeUrl = window.env.GRAPHQL_URI.indexOf('testnet') ? `https://1ml.com/testnet/node/` : `https://1ml.com/node/`\n\n  let { loading, error, data } = useQuery(GET_NODE_STATS)\n\n  return (\n    <div>\n      <Header />\n      <Container>\n        <br />\n        <Row>\n          <Col>\n            <h2>Connect to the Bitcoin Beach Lightning Node</h2>\n            <br />\n            <Jumbotron>\n              <Container>\n                <Row>\n                  <Col>\n                    <Card>\n                      <Card.Body>\n                        <ListGroup variant=\"flush\">\n                          <ListGroup.Item>\n                            <label>Node Public Key: </label> <p style={{ fontSize: 'small', overflowWrap: 'break-word' }}>{error ? \"Unavailable\" : (loading ? \"Loading...\" :data.nodeStats.id)}</p>\n                          </ListGroup.Item>\n                          <ListGroup.Item>\n                          {error ? \"Unavailable\" : (loading ? \"Loading...\" : <a href={nodeUrl + `${data.nodeStats.id}`}>Connect the Bitcoin Beach Lightning node</a>)}\n                          </ListGroup.Item>\n                        </ListGroup>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                  <Col>\n                  <Card>\n      <Card.Header>Node Stats</Card.Header>\n      <Card.Body>\n        <ListGroup>\n          <ListGroup.Item variant=\"success\">\n            Peers: {error ? \"Unavailable\" : (loading ? \"Loading...\" : data.nodeStats.peersCount)}\n          </ListGroup.Item>\n          <ListGroup.Item variant=\"success\">\n            Channels: {error ? \"Unavailable\" : (loading ? \"Loading...\" : data.nodeStats.channelsCount)}\n          </ListGroup.Item>\n        </ListGroup>\n      </Card.Body>\n    </Card>\n                  </Col>\n                </Row>\n                <hr />\n              </Container>\n            </Jumbotron>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home\n","import React from 'react';\nimport { QRCode } from 'react-qrcode-logo'\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Header from './header.js'\n\nexport const getOS = () => {\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"android\"\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"ios\"\n  }\n}\n\nexport const playStoreLink = \"https://play.google.com/store/apps/details?id=com.galoyapp\"\nexport const appStoreLink = \"https://apps.apple.com/app/bitcoin-beach-wallet/id1531383905\"\nexport const apkLink = \"https://storage.googleapis.com/bitcoin-beach-wallet/latest.apk\"\n\nconst DownloadApp = () => {\n  const os = getOS()\n\n  if (os === \"android\") {\n    return window.location.replace(\"https://play.google.com/store/apps/details?id=com.galoyapp\")\n  } else if (os === \"ios\") {\n    return window.location.replace(\"itms-apps://itunes.apple.com/app/bitcoin-beach-wallet/id1531383905\")\n  }\n\n  return (\n    <div>\n      <Header />\n      <Container>\n        <br />\n        <h3>Download the Bitcoin Beach Wallet</h3>\n        <br />\n        <Row>\n          <Col>\n            <a href={appStoreLink}>\n              <Image src={process.env.PUBLIC_URL + '/apple-app-store.png'} rounded />\n            </a>\n            <br />\n            <br />\n          </Col>\n          <Col>\n            <a href={playStoreLink}>\n              <Image src={process.env.PUBLIC_URL + '/google-play-badge.png'} rounded />\n            </a>\n          </Col>\n          <Col>\n            <div style={{ width: 200 }}>\n              <Button href={apkLink} block variant=\"outline-dark\">Download APK<br /> for Android</Button>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <QRCode value={appStoreLink} size={200} />\n          </Col>\n          <Col>\n            <QRCode value={playStoreLink} size={200} />\n          </Col>\n          <Col>\n            <QRCode value={apkLink} size={200} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default DownloadApp","import React, { useEffect, useState } from 'react';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport { QRCode } from 'react-qrcode-logo'\nimport Header from './header.js'\nimport { gql, useMutation } from '@apollo/client';\nimport { getOS, appStoreLink, playStoreLink } from './downloadApp.js'\nimport copy from \"copy-to-clipboard\";\nimport Lottie from 'react-lottie';\nimport animationData from './successAnimation.json'\n\nconst UPDATE_PENDING_INVOICE = gql`\n      mutation PublicInvoice($hash: String!, $username: String!) {\n        publicInvoice(username: $username) {\n          updatePendingInvoice(hash: $hash)\n        }\n      }\n    `\n\nconst GENERATE_PUBLIC_INVOICE = gql`\n      mutation publicInvoice($username: String!) {\n        publicInvoice(username: $username) {\n          addInvoice\n        }\n      }\n    `\n\nfunction Receive({ username }) {\n\n  const [invoice, setInvoice] = useState(0)\n  const [invoicePaid, setInvoicePaid] = useState(false)\n  const [os, setOS] = useState(null)\n  const [showCopied, setShowCopied] = useState(false)\n\n  const [generatePublicInvoice, { loading: invoiceLoading, error }] = useMutation(GENERATE_PUBLIC_INVOICE, {\n    onCompleted({ publicInvoice: { addInvoice } }) {\n      setInvoice(addInvoice)\n    },\n    onError(error) {\n      console.error(error.message)\n    }\n  })\n\n  useEffect(() => {\n    generatePublicInvoice({ variables: { username } })\n    setOS(getOS())\n  }, [])\n\n  const [updatePendingInvoice, { loading: invoiceUpdating }] = useMutation(UPDATE_PENDING_INVOICE, {\n    onCompleted({ publicInvoice: { updatePendingInvoice: invoicePaid } }) {\n      setInvoicePaid(invoicePaid)\n    }\n  })\n\n  const checkPayment = async () => {\n    let decoded = window.lightningPayReq.decode(invoice)\n    let [{ data: hash }] = decoded.tags.filter(item => item.tagName === \"payment_hash\")\n    updatePendingInvoice({ variables: { username, hash } })\n  }\n\n  const copyInvoice = () => {\n    copy(invoice)\n    setShowCopied(true)\n    setTimeout(() => {\n      setShowCopied(false)\n    }, 3000)\n  }\n\n  return (\n    <div>\n      <Header />\n      <Container fluid >\n        {os === undefined && <br />}\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ padding: 0 }}>\n            <Card className=\"text-center\">\n              <Card.Header>\n                Pay {username}\n              </Card.Header>\n              {error?.message === \"User not found\" && <div> <br /> User not found </div>}\n              {(invoiceLoading || !invoice) && !error && <div> <br />Loading...</div>}\n              {invoicePaid &&\n                <div>\n                  <Lottie\n                    options={{ animationData: animationData, loop: false }}\n                    height=\"150\"\n                    width=\"150\"\n                  >\n                  </Lottie>\n                </div>\n              }\n              {!invoiceLoading && !invoicePaid && !error && <Card.Body style={{ paddingBottom: '0', paddingTop: '5px' }}>\n                <small>Scan using a lightning enabled wallet</small>\n\n                <OverlayTrigger\n                  show={showCopied}\n                  placement=\"top\"\n                  overlay={\n                    <Tooltip>\n                      Copied!\n                    </Tooltip>\n                  }>\n                  <div onClick={copyInvoice}>\n                    <QRCode value={`${invoice}`} size={320} logoImage={process.env.PUBLIC_URL + '/BBQRLogo.png'} logoWidth={100} />\n                  </div>\n                </OverlayTrigger>\n\n                <Button size=\"sm\" disabled={invoiceUpdating} onClick={checkPayment}>{invoiceUpdating ? 'Waiting...' : 'Check payment'}</Button>\n              </Card.Body>}\n\n              <Card.Body>\n                <br />\n                {os === \"android\" && <a href={playStoreLink}>\n                  <Image src={process.env.PUBLIC_URL + '/google-play-badge.png'} height=\"40px\" rounded />\n                </a>}\n                {os === \"ios\" && <a href={playStoreLink}>\n                  <Image src={process.env.PUBLIC_URL + '/apple-app-store.png'} height=\"40px\" rounded />\n                </a>}\n                {os === undefined && <div>\n                  <a href={appStoreLink}>\n                    <Image src={process.env.PUBLIC_URL + '/apple-app-store.png'} height=\"45px\" rounded />\n                  </a>&nbsp;\n                  <a href={playStoreLink}>\n                    <Image src={process.env.PUBLIC_URL + '/google-play-badge.png'} height=\"45px\" rounded />\n                  </a>\n                </div>}\n              </Card.Body>\n              <Card.Footer className=\"text-muted\">\n                Powered by <Card.Link href=\"https://try.galoy.io\">Galoy </Card.Link>\n                <br /><Card.Link href={window.location.origin}>Open a channel with us</Card.Link>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n        <br />\n      </Container>\n\n    </div >\n  )\n}\n\nexport default Receive\n","import React, { useRef } from 'react';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport ReactToPrint from \"react-to-print\";\nimport { QRCode } from 'react-qrcode-logo'\nimport Header from './header.js'\n\nconst QRContainer = React.forwardRef((props, ref) => {\n  return (\n    <div style={{ display: \"none\" }}>\n      <Container fluid ref={ref}>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <Card className=\"text-center\">\n              <Card.Body>\n                <Card.Text>\n                  <h1>Pay {props.username}</h1>\n                  <QRCode ecLevel=\"H\" value={`https://ln.bitcoinbeach.com/${props.username}`} size={800} logoImage={process.env.PUBLIC_URL + '/BBQRLogo.png'} logoWidth={250} />\n                </Card.Text>\n              </Card.Body>\n              <h2>Powered by Galoy.io</h2>\n            </Card>\n          </Col>\n        </Row>\n        <br />\n      </Container>\n    </div>\n  )\n})\n\nconst PrintQR = ({ username }) => {\n\n  const componentRef = useRef()\n\n  return (\n    <div>\n      <Header />\n      <QRContainer username={username} ref={componentRef} />\n      <Container fluid>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            <Card className=\"text-center\">\n              <Card.Body>\n                <Card.Text>\n                  <h3>Pay {username}</h3>\n                  <QRCode id=\"qr\" ecLevel=\"H\"  value={`https://ln.bitcoinbeach.com/${username}`} size={300} logoImage={process.env.PUBLIC_URL + '/BBQRLogo.png'} logoWidth={100} />\n                </Card.Text>\n              </Card.Body>\n              <h4>Powered by <Card.Link href=\"https://try.galoy.io\">Galoy.io</Card.Link></h4>\n            </Card>\n          </Col>\n        </Row>\n        <br />\n      </Container>\n      <Row className=\"justify-content-md-center\">\n        <ReactToPrint\n          trigger={() => <Button>Print QR Code</Button>}\n          content={() => componentRef.current}\n          onBeforeGetContent={() => {\n            document.getElementById('react-qrcode-logo').style.height = 1000\n            document.getElementById('react-qrcode-logo').style.width = 1000\n          }}\n        />\n      </Row>\n    </div>\n  )\n}\n\nexport default PrintQR","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './components/home.js'\nimport Receive from './components/receive.js'\nimport PrintQR from './components/printQR.js'\nimport DownloadApp from './components/downloadApp.js'\nimport { useRoutes } from 'hookrouter';\n\n\nconst routes = {\n  '/': () => <Home />,\n  '/elzonte': () => <DownloadApp />,\n  '/:username/print': ({ username }) => <PrintQR username={username} />,\n  '/:username': ({ username }) => <Receive username={username} />\n};\n\nfunction App() {\n\n  let routeResult = useRoutes(routes);\n\n  return routeResult || <Home />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\nimport './index.css';\nimport App from './App';\n\nconst client = new ApolloClient({\n\turi: window.env.GRAPHQL_URI,\n\tcache: new InMemoryCache()\n});\n\nReactDOM.render(\n\t<ApolloProvider client={client}>\n\t\t<App />\n\t</ApolloProvider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}